// Mocks generated by Mockito 5.4.4 from annotations
// in currency_converter_app/test/data/repository/converter_reposirory_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:currency_converter_app/data/data_source/local_data_source.dart'
    as _i5;
import 'package:currency_converter_app/data/data_source/remote_data_source.dart'
    as _i2;
import 'package:currency_converter_app/data/models/country_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ConverterRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockConverterRemoteDataSource extends _i1.Mock
    implements _i2.ConverterRemoteDataSource {
  MockConverterRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CountryModel>> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.CountryModel>>.value(<_i4.CountryModel>[]),
      ) as _i3.Future<List<_i4.CountryModel>>);

  @override
  _i3.Future<double> convertCurrency({
    required String? fromCurrency,
    required String? toCurrency,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertCurrency,
          [],
          {
            #fromCurrency: fromCurrency,
            #toCurrency: toCurrency,
          },
        ),
        returnValue: _i3.Future<double>.value(0.0),
      ) as _i3.Future<double>);

  @override
  _i3.Future<Map<String, dynamic>> getHistoryOfCurrency({
    required String? fromCurrency,
    required String? toCurrency,
    required String? startDate,
    required String? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoryOfCurrency,
          [],
          {
            #fromCurrency: fromCurrency,
            #toCurrency: toCurrency,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [ConverterLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockConverterLocalDataSource extends _i1.Mock
    implements _i5.ConverterLocalDataSource {
  MockConverterLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CountryModel>> getCachedCountries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedCountries,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.CountryModel>>.value(<_i4.CountryModel>[]),
      ) as _i3.Future<List<_i4.CountryModel>>);

  @override
  _i3.Future<void> cacheCountries(List<_i4.CountryModel>? countries) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheCountries,
          [countries],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
